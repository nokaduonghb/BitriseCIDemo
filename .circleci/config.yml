version: 2

defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-29
  environment:
    JVM_OPTS: -Xmx3200m

jobs:
  apply_ktlint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: sudo chmod +x ./gradlew
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundle-ruby-${{ runner.os }}-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: bundle-ruby-${{ runner.os }}-${{ hashFiles('.ruby-version') }}-
      - name: install gem
        run: |
          bundle config path vendor/bundle
          bundle install
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-gradle-cache-
      - uses: actions/cache@v1
        with:
          path: .gradle
          key: ${{ runner.os }}-gradle-project-${{ github.sha }}
          restore-keys: ${{ runner.os }}-gradle-project-
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: ktlint
        run: ./gradlew ktlintCheck
      - name: Danger
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bundle exec danger
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Apply ktlint format
        run: ./gradlew ktlintFormat
      - name: Commit changes
        shell: bash +e {0}
        run: |
          git config --local user.email "noka-bot@noka.co"
          git config --local user.name "noka-bot"
          git commit -am "Apply ktlint Format" && git push origin HEAD
          exit 0

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - apply_ktlint